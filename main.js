!function(){"use strict";class e{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this.id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleLikeClick=s,this._handleDeleteClick=r,this._handleImageClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteCardButton=this._cardElement.querySelector(".card__delete-button"),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.setAttribute("src",this._link),this._cardImage.setAttribute("alt",this._name),this._setEventListeners(),this._renderLikes(),this._cardElement}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteCardButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}updateLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}removeCard(){this._cardElement.remove(),this._cardElement=null}getId(){return this.id}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputElements)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputItems=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._saveButton=this._popupForm.querySelector(".modal__button"),this._saveButtonText=this._saveButton.textContent}_getInputValues(){const e={};return this._inputItems.forEach((t=>{e[t.name]=t.value})),console.log({inputValues:e}),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}setLoading(e){this._saveButton.textContent=e?"Saving...":this._saveButtonText}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach(this._renderer)}addItem(e){this._container.prepend(e)}}const i=document.querySelector("#edit-profile-open-button"),o=document.querySelector("#add-card-open-button"),a=document.querySelector("#avatar-edit-button"),l=document.querySelector("#profile-title-input"),c=document.querySelector("#profile-description-input");function d(t){const s=function(t){return new e(t,"#card-template",L,k,((e,t)=>{E.open(e,t)})).getView()}(t);u.addItem(s)}const h=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}loadPageContent(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"67f9ee29-81ba-42c1-865a-539d34535736","Content-Type":"application/json"}});let u;h.loadPageContent().then((e=>{let[t,s]=e;_.setUserAvatar(s.avatar),_.setUserInfo({name:s.name,about:s.about,id:s.id}),u=new n({items:t,renderer:d},".cards__list"),u.renderItems()})).catch((e=>{console.error(e)}));const _=new class{constructor(e,t,s){this._name=document.querySelector(e),this._about=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}setUserAvatar(e){this._userAvatar.src=e}}(".profile__title",".profile__description",".profile__image"),m=new r("#add-card-modal",(function(e){m.setLoading(!0),h.addCard(e).then((e=>{d(e),m.close()})).catch((e=>{console.error(e)})).finally((()=>m.setLoading(!1,"Create")))}));m.setEventListeners(),o.addEventListener("click",(()=>{f["edit-profile-form"].resetValidation(),m.open()}));const p=new r("#profile-edit-modal",(function(e){p.setLoading(!0),h.updateUserInfo(e.name,e.about).then((e=>{_.setUserInfo(e),p.close()})).catch((e=>{console.error(e)})).finally((()=>p.setLoading(!1,"Save")))}));p.setEventListeners(),i.addEventListener("click",(()=>{const e=_.getUserInfo();l.value=e.name,c.value=e.about,p.open()}));const v=new r("#avatar-image-modal",(function(e){v.setLoading(!0),h.updateAvatar(e.avatar).then((e=>{_.setUserAvatar(e.avatar),v.close()})).catch((e=>{console.error(e)})).finally((()=>{v.setLoading(!1,"Save")}))}));v.setEventListeners(),a.addEventListener("click",(()=>{f["edit-avatar-form"].resetValidation(),v.open()}));const E=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector("#image-preview-modal"),this._caption=this._popupElement.querySelector(".modal__caption")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._caption.textContent=e}}("#image-modal");function L(e){e.isLiked?h.unlikeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch((e=>{console.error(e)})):h.likeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch((e=>{console.error(e)}))}E.setEventListeners();const b=new class extends s{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__button"),this._saveButtonText=this._saveButton.textContent}setLoading(e){this._saveButton.textContent=e?"Saving...":this._saveButtonText}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#delete-card-modal");function k(e){b.open(),b.setSubmitAction((()=>{b.setLoading(!0),h.deleteCard(e.id).then((()=>{b.close(),e.removeCard()})).catch((e=>{console.error(e)})).finally((()=>{b.setLoading(!1,"Yes")}))}))}b.setEventListeners();const f={};var S;S={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(S.formSelector)).forEach((e=>{const s=new t(S,e),r=e.getAttribute("name");f[r]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,